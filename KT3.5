using System.Numerics;

namespace KT3._5
{
    internal class Program
    {
        static void Main(string[] args)
        {
            var rect1 = new Rectangle<string, int>(new Vector2(0, 0), "4", 2);
            var rect2 = new Rectangle<float, double>(new Vector2(1.5f, 2.5f), 2.5f, 3.3);
            var rect3 = new Rectangle<string, float>(new Vector2(-2, 3), "3", 4.2f);
            Console.WriteLine($"{rect1.Center} {rect1.Width} {rect1.Height} {rect1.MinPoint} {rect1.MaxPoint}");
            Console.WriteLine($"{rect2.Center} {rect2.Width} {rect2.Height} {rect2.MinPoint} {rect2.MaxPoint}");
            Console.WriteLine($"{rect3.Center} {rect3.Width} {rect3.Height} {rect3.MinPoint} {rect3.MaxPoint}");
        }
    }
    class Figure
    {
        public Vector2 Center { get; set; }
        public Figure(Vector2 center)
        {
            Center = center;
        }
        public virtual Vector2 MinPoint => Center;
        public virtual Vector2 MaxPoint => Center;
    }
    class Rectangle<TWidth, THeight> : Figure
    {
        public TWidth Width { get; private set; }
        public THeight Height { get; private set; }
        public Rectangle(Vector2 center, TWidth width, THeight height) : base(center)
        {
            Width = width;
            Height = height;
        }
        public void SetWidth(TWidth width) => Width = width;
        public void SetHeight(THeight height) => Height = height;
        public override Vector2 MinPoint
        {
            get
            {
                double w = Convert.ToDouble(Width) / 2;
                double h = Convert.ToDouble(Height) / 2;
                return Center - new Vector2((float)w, (float)h);
            }
        }
        public override Vector2 MaxPoint
        {
            get
            {
                double w = Convert.ToDouble(Width) / 2;
                double h = Convert.ToDouble(Height) / 2;
                return Center + new Vector2((float)w, (float)h);
            }
        }
    }
}
